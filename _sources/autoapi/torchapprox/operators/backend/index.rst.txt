:py:mod:`torchapprox.operators.backend`
=======================================

.. py:module:: torchapprox.operators.backend

.. autoapi-nested-parse::

   TorchApprox Accelerated Backend Functions



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   torchapprox.operators.backend.dwconv2d
   torchapprox.operators.backend.approx



Attributes
~~~~~~~~~~

.. autoapisummary::

   torchapprox.operators.backend.logger
   torchapprox.operators.backend.sources
   torchapprox.operators.backend.extra_cflags
   torchapprox.operators.backend.dirname
   torchapprox.operators.backend.sources
   torchapprox.operators.backend.ta_backend


.. py:data:: logger
   

   

.. py:data:: sources
   :annotation: = ['../../cpu/ta_gemm_cpu.cpp']

   

.. py:data:: extra_cflags
   :annotation: = ['-fopenmp']

   

.. py:data:: dirname
   

   

.. py:data:: sources
   

   

.. py:data:: ta_backend
   

   

.. py:function:: dwconv2d(x: torch.Tensor, w: torch.Tensor, lut: torch.Tensor, stride: int = 1, padding: int = 0)

   Approximate 2D Depthwise Convolution


.. py:function:: approx(a: torch.Tensor, b: torch.Tensor, lut: torch.Tensor, res: Optional[torch.Tensor] = None) -> torch.Tensor

   Input validation wrapper for Approximate GeMM

   Expected are two matrices `a` and `b`, one of which needs to be batched


